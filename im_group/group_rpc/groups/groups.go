// Code generated by goctl. DO NOT EDIT.
// Source: group_rpc.proto

package groups

import (
	"context"

	"im_server/im_group/group_rpc/types/group_rpc"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	IsInGroupRequest  = group_rpc.IsInGroupRequest
	IsInGroupResponse = group_rpc.IsInGroupResponse

	Groups interface {
		IsInGroup(ctx context.Context, in *IsInGroupRequest, opts ...grpc.CallOption) (*IsInGroupResponse, error)
	}

	defaultGroups struct {
		cli zrpc.Client
	}
)

func NewGroups(cli zrpc.Client) Groups {
	return &defaultGroups{
		cli: cli,
	}
}

func (m *defaultGroups) IsInGroup(ctx context.Context, in *IsInGroupRequest, opts ...grpc.CallOption) (*IsInGroupResponse, error) {
	client := group_rpc.NewGroupsClient(m.cli.Conn())
	return client.IsInGroup(ctx, in, opts...)
}
