syntax = "v1"

type groupCreateRequest {
	UserID     uint   `header:"User-ID"`
	Mode       int8   `json:"mode,optional"` // 模式 1 直接创建模式 2 选人创建模式
	Name       string `json:"name,optional"` // 群聊名字
	IsSearch   bool   `json:"isSearch,optional"`
	Size       int    `json:"size,optional"` // 群规模
	UserIDList []uint `json:"userIdList,optional"` // 用户id列表
}

type groupCreateResponse {}

type groupInfoRequest {
	UserID uint `header:"User-ID"`
	ID     uint `path:"id"` //群id
}

type UserInfo {
	UserID   uint   `header:"User-ID"`
	Avatar   string `json:"avatar"`
	Nickname string `json:"nickname"`
}

type groupInfoResponse {
	GroupID           uint       `json:"groupId"` //群id
	Title             string     `json:"title"` //群名称
	Abstract          string     `json:"abstract"` //群简介
	Avatar            string     `json:"avatar"` //群头像
	Creator           UserInfo   `json:"creator"` //群主
	MemberCount       int        `json:"memberCount"` //群聊用户总数
	MemberOnlineCount int        `json:"memberOnlineCount"` //在线用户数量
	AdminList         []UserInfo `json:"adminList"` //管理员列表
	Role              int8       `json:"role"` // 群角色 1 群主 2 管理员 3 群成员
	IsProhibition     bool       `json:"isProhibition"` // 是否开启全员禁言
	ProhibitionTime   *int       `json:"prohibitionTime"` // 禁言时间 单位分钟
}

type VerificationQuestion {
	Problem1 *string `json:"problem1,optional" conf:"problem1"`
	Problem2 *string `json:"problem2,optional" conf:"problem2"`
	Problem3 *string `json:"problem3,optional" conf:"problem3"`
	Answer1  *string `json:"answer1,optional" conf:"answer1"`
	Answer2  *string `json:"answer2,optional" conf:"answer2"`
	Answer3  *string `json:"answer3,optional" conf:"answer3"`
}

type groupUpdateRequest {
	UserID               uint                  `header:"User-ID"`
	ID                   uint                  `json:"id"` // 群id
	IsSearch             *bool                 `json:"isSearch,optional" conf:"is_search"` // 是否可以被搜索
	Avatar               *string               `json:"avatar,optional" conf:"avatar"` // 群头像
	Abstract             *string               `json:"abstract,optional" conf:"abstract"` // 群简介
	Title                *string               `json:"title,optional" conf:"title"` // 群名称
	Verification         *int8                 `json:"verification,optional" conf:"verification"` // 群验证
	IsInvite             *bool                 `json:"isInvite,optional" conf:"is_invite"` // 是否可邀请好友
	IsTemporarySession   *bool                 `json:"isTemporarySession,optional" conf:"is_temporary_session"` // 是否可临时会话
	IsProhibition        *bool                 `json:"isProhibition,optional" conf:"is_prohibition"` // 是否全员禁言
	VerificationQuestion *VerificationQuestion `json:"verificationQuestion,optional" conf:"verification_question"`
}

type groupUpdateResponse {}

type groupRemoveRequest {
	UserID uint `header:"User-ID"`
	ID     uint `path:"id"` //群id
}

type groupRemoveResponse {}

type groupMemberRequest {
	UserID uint   `header:"User-ID"`
	ID     uint   `form:"id"` //群id
	Page   int    `form:"page,optional"`
	Limit  int    `form:"limit,optional"`
	Sort   string `form:"sort,optional"`
}

type GroupMemberInfo {
	UserID         uint   `json:"userId"`
	UserNickname   string `json:"userNickname"`
	Avatar         string `json:"avatar"`
	IsOnline       bool   `json:"isOnline"`
	Role           int8   `json:"role"`
	MemberNickname string `json:"memberNickname"`
	CreatedAt      string `json:"createdAt"`
	NewMsgDate     string `json:"newMsgDate"`
}

type groupMemberResponse {
	List  []GroupMemberInfo `json:"list"`
	Count int               `json:"count"`
}

type groupMemberRemoveRequest {
	UserID   uint `header:"User-ID"`
	ID       uint `form:"id"` //群id
	MemberID uint `form:"memberId"` //成员id
}

type groupMemberRemoveResponse {}

type groupMemberAddRequest {
	UserID       uint   `header:"User-ID"`
	ID           uint   `json:"id"` //群id
	MemberIDList []uint `json:"memberIdList"` //成员id列表
}

type groupMemberAddResponse {}

type groupMemberNicknameUpdateRequest {
	UserID   uint   `header:"User-ID"`
	ID       uint   `json:"id"` //群id
	MemberID uint   `json:"memberId"` //成员id
	Nickname string `json:"nickname"` //成员昵称
}

type groupMemberNicknameUpdateResponse {}

type groupMemberRoleUpdateRequest {
	UserID   uint `header:"User-ID"`
	ID       uint `json:"id"` //群id
	MemberID uint `json:"memberId"` //成员id
	Role     int8 `json:"role"`
}

type groupMemberRoleUpdateResponse {}

type groupFriendsListRequest {
	UserID uint `header:"User-ID"` //自己的id
	ID     uint `form:"id"` //群id
}

type GroupFriendsResponse {
	UserID    uint   `json:"userId"`
	Avatar    string `json:"avatar"`
	Nickname  string `json:"nickname"`
	IsInGroup bool   `json:"isInGroup"` //是否在群里面
}

type groupFriendsListResponse {
	Count int                    `json:"count"`
	List  []GroupFriendsResponse `json:"list"`
}

type groupSearchRequest {
	Page   int    `form:"page,optional"`
	Limit  int    `form:"limit,optional"`
	Key    string `form:"key,optional"` // 用户id和昵称
	UserID uint   `header:"User-ID"`
}

type GroupSearchResponse {
	GroupID         uint   `json:"groupId`
	Title           string `json:"title`
	Abstract        string `json:"abstract"`
	Avatar          string `json:"avatar"`
	IsInGroup       bool   `json:"isInGroup"` // 我是否在群里
	UserCount       int    `json:"userCount"` // 群用户总数
	UserOnlineCount int    `json:"userOnlineCount"` // 群在线用户总数
}

type groupSearchListResponse {
	List  []GroupSearchResponse `json:"list"`
	Count int                   `json:"count"`
}

type groupValidRequest {
	UserID  uint `header:"User-ID"`
	GroupID uint `path:"id"`
}

type groupValidResponse {
	Verification         int8                 `json:"verification"` // 好友验证
	VerificationQuestion VerificationQuestion `json:"verificationQuestion"` // 问题和答案, 答案不返回
}

type AddGroupRequest {
	UserID               uint                  `header:"User-ID"`
	GroupID              uint                  `json:"groupID"`
	Verify               string                `json:"verify,optional"` // 验证消息
	VerificationQuestion *VerificationQuestion `json:"verificationQuestion,optional"` // 问题和答案
}

type AddGroupResponse {}

type groupValidListRequest {
	UserID uint `header:"User-ID"`
	Page   int  `form:"page,optional"`
	Limit  int  `form:"limit,optional"`
}

type GroupValidInfoResponse {
	ID                   uint                  `json:"id"`
	GroupID              uint                  `json:"groupId"`
	UserID               uint                  `json:"userId"`
	UserNickname         string                `json:"userNickname"`
	UserAvatar           string                `json:"userAvatar"`
	status               int8                  `json:"status"`
	AdditionalMessages   string                `json:"additionalMessages"`
	VerificationQuestion *VerificationQuestion `json:"verificationQuestion"`
	Title                string                `json:"title"`
	Type                 int8                  `json:"type"` //1 加群 2退群
	CreatedAt            string                `json:"createdAt"`
}

type groupValidListResponse {
	List  []GroupValidInfoResponse `json:"list"`
	Count int                      `json:"count"`
}

type groupValidStatusRequest {
	UserID  uint `header:"User-ID"`
	ValidID uint `json:"validId"`
	Status  int8 `json:"status"`
}

type groupValidStatusResponse {}

type groupProhibitionRequest {
	UserID          uint `header:"User-ID"`
	GroupID         uint `json:"groupId"`
	MemberID        uint `json:"memberId"`
	ProhibitionTime *int `json:"prohibitionTime,optional"` // 禁言时间, 单位分钟
}

type groupProhibitionResponse {}

type groupHistoryRequest {
	UserID uint `header:"User-ID"`
	ID     uint `path:"id"`
	Page   int  `form:"page,optional"`
	Limit  int  `form:"limit,optional"`
}

type groupHistoryResponse {}

type groupHistoryDeleteRequest {
	UserID    uint   `header:"User-ID"`
	ID        uint   `path:"id"`
	Page      int    `form:"page,optional"`
	Limit     int    `form:"limit,optional"`
	MsgIDList []uint `json:"msgIdList"`
}

type groupHistoryDeleteResponse {}

type groupSessionRequest {
	UserID uint `header:"User-ID"`
	Page   int  `form:"page,optional"`
	Limit  int  `form:"limit,optional"`
}

type GroupSessionResponse {
	GroupID       uint   `json:"groupId"`
	Title         string `json:"title"`
	Avatar        string `json:"avatar"`
	NewMsgDate    string `json:"newMsgDate"` //最新的消息时间
	NewMsgPreview string `json:"newMsgPreview"` //最新的消息内容
	IsTop         bool   `json:"isTop"`
}

type groupSessionListResponse {
	List  []GroupSessionResponse `json:"list"`
	Count int                    `json:"count"`
}

type groupTopRequest {
	UserID  uint `header:"User-ID"`
	GroupID uint `json:"groupId"`
	IsTop   bool `json:"isTop"`
}

type groupTopResponse {}

service group {
	@handler groupCreate
	post /api/group/group (groupCreateRequest) returns (groupCreateResponse) // 创建群聊

	@handler groupInfo
	get /api/group/group/:id (groupInfoRequest) returns (groupInfoResponse) // 群信息

	@handler groupUpdate
	put /api/group/groupUpdate (groupUpdateRequest) returns (groupUpdateResponse) // 群更新

	@handler groupRemove
	delete /api/group/group/:id (groupRemoveRequest) returns (groupRemoveResponse) // 群解散

	@handler groupMember
	get /api/group/member (groupMemberRequest) returns (groupMemberResponse) // 群成员列表

	@handler groupMemberRemove
	delete /api/group/member (groupMemberRemoveRequest) returns (groupMemberRemoveResponse) // 移出群员

	@handler groupMemberAdd
	post /api/group/member (groupMemberAddRequest) returns (groupMemberAddResponse) // 邀请成员入群

	@handler groupMemberNicknameUpdate
	put /api/group/member/nickname (groupMemberNicknameUpdateRequest) returns (groupMemberNicknameUpdateResponse) // 修改群成员昵称

	@handler groupMemberRoleUpdate
	put /api/group/member/role (groupMemberRoleUpdateRequest) returns (groupMemberRoleUpdateResponse) // 变更管理员角色

	@handler groupFriendsList
	get /api/group/friends (groupFriendsListRequest) returns (groupFriendsListResponse) //群里哪些是我的好友

	@handler groupSearch
	get /api/group/search (groupSearchRequest) returns (groupSearchListResponse) // 群搜索

	@handler groupValid
	get /api/group/valid/:id (groupValidRequest) returns (groupValidResponse) // 群验证

	@handler groupValidAdd
	post /api/group/valid (AddGroupRequest) returns (AddGroupResponse) // 用户加群

	@handler groupValidList
	get /api/group/valid (groupValidListRequest) returns (groupValidListResponse) // 群验证列表

	@handler groupValidStatus
	put /api/group/valid/status (groupValidStatusRequest) returns (groupValidStatusResponse) // 群验证操作

	@handler groupProhibitionUpdate
	put /api/group/member/prohibition (groupProhibitionRequest) returns (groupProhibitionResponse) // 群禁言用户

	@handler groupHistory
	get /api/group/history/:id (groupHistoryRequest) returns (groupHistoryResponse) // 聊天记录 不使用groupHistoryResponse

	@handler groupHistoryDelete
	delete /api/group/history/:id (groupHistoryDeleteRequest) returns (groupHistoryDeleteResponse) // 删除群聊聊天记录

	@handler groupSession
	get /api/group/session (groupSessionRequest) returns (groupSessionListResponse) // 群会话列表

	@handler groupTop
	put /api/group/top (groupTopRequest) returns (groupTopResponse) // 群会话列表
} //goctl api go -api group_api.api -dir . --home ../../template

