// Code generated by goctl. DO NOT EDIT.
// Source: chat_rpc.proto

package users

import (
	"context"

	"im_server/im_chat/chat_rpc/types/chat_rpc"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	UserChatRequest  = chat_rpc.UserChatRequest
	UserChatResponse = chat_rpc.UserChatResponse

	Users interface {
		UserCreate(ctx context.Context, in *UserChatRequest, opts ...grpc.CallOption) (*UserChatResponse, error)
	}

	defaultUsers struct {
		cli zrpc.Client
	}
)

func NewUsers(cli zrpc.Client) Users {
	return &defaultUsers{
		cli: cli,
	}
}

func (m *defaultUsers) UserCreate(ctx context.Context, in *UserChatRequest, opts ...grpc.CallOption) (*UserChatResponse, error) {
	client := chat_rpc.NewUsersClient(m.cli.Conn())
	return client.UserCreate(ctx, in, opts...)
}
